(window.webpackJsonp=window.webpackJsonp||[]).push([[123],{729:function(t,e,n){"use strict";n.r(e);var s=n(1),o=Object(s.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"tendermint-spec"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#tendermint-spec"}},[t._v("#")]),t._v(" Tendermint Spec")]),t._v(" "),n("p",[t._v("This is a markdown specification of the Tendermint blockchain.\nIt defines the base data structures, how they are validated,\nand how they are communicated over the network.")]),t._v(" "),n("p",[t._v("If you find discrepancies between the spec and the code that\ndo not have an associated issue or pull request on github,\nplease submit them to our "),n("a",{attrs:{href:"https://tendermint.com/security",target:"_blank",rel:"noopener noreferrer"}},[t._v("bug bounty"),n("OutboundLink")],1),t._v("!")]),t._v(" "),n("h2",{attrs:{id:"contents"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#contents"}},[t._v("#")]),t._v(" Contents")]),t._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"#overview"}},[t._v("Overview")])])]),t._v(" "),n("h3",{attrs:{id:"data-structures"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#data-structures"}},[t._v("#")]),t._v(" Data Structures")]),t._v(" "),n("ul",[n("li",[n("RouterLink",{attrs:{to:"/spec/blockchain/encoding.html"}},[t._v("Encoding and Digests")])],1),t._v(" "),n("li",[n("RouterLink",{attrs:{to:"/spec/blockchain/blockchain.html"}},[t._v("Blockchain")])],1),t._v(" "),n("li",[n("RouterLink",{attrs:{to:"/spec/blockchain/state.html"}},[t._v("State")])],1)]),t._v(" "),n("h3",{attrs:{id:"consensus-protocol"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#consensus-protocol"}},[t._v("#")]),t._v(" Consensus Protocol")]),t._v(" "),n("ul",[n("li",[n("RouterLink",{attrs:{to:"/spec/consensus/consensus.html"}},[t._v("Consensus Algorithm")])],1),t._v(" "),n("li",[n("RouterLink",{attrs:{to:"/spec/consensus/creating-proposal.html"}},[t._v("Creating a proposal")])],1),t._v(" "),n("li",[n("RouterLink",{attrs:{to:"/spec/consensus/bft-time.html"}},[t._v("Time")])],1),t._v(" "),n("li",[n("RouterLink",{attrs:{to:"/spec/consensus/light-client.html"}},[t._v("Light-Client")])],1)]),t._v(" "),n("h3",{attrs:{id:"p2p-and-network-protocols"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#p2p-and-network-protocols"}},[t._v("#")]),t._v(" P2P and Network Protocols")]),t._v(" "),n("ul",[n("li",[n("RouterLink",{attrs:{to:"/spec/p2p/node.html"}},[t._v("The Base P2P Layer")]),t._v(': multiplex the protocols ("reactors") on authenticated and encrypted TCP connections')],1),t._v(" "),n("li",[n("RouterLink",{attrs:{to:"/spec/reactors/pex/reactor.html"}},[t._v("Peer Exchange (PEX)")]),t._v(": gossip known peer addresses so peers can find each other")],1),t._v(" "),n("li",[n("RouterLink",{attrs:{to:"/spec/reactors/block_sync/reactor.html"}},[t._v("Block Sync")]),t._v(": gossip blocks so peers can catch up quickly")],1),t._v(" "),n("li",[n("RouterLink",{attrs:{to:"/spec/reactors/consensus/consensus.html"}},[t._v("Consensus")]),t._v(": gossip votes and block parts so new blocks can be committed")],1),t._v(" "),n("li",[n("RouterLink",{attrs:{to:"/spec/reactors/mempool/reactor.html"}},[t._v("Mempool")]),t._v(": gossip transactions so they get included in blocks")],1),t._v(" "),n("li",[n("RouterLink",{attrs:{to:"/spec/reactors/evidence/reactor.html"}},[t._v("Evidence")]),t._v(": sending invalid evidence will stop the peer")],1)]),t._v(" "),n("h3",{attrs:{id:"software"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#software"}},[t._v("#")]),t._v(" Software")]),t._v(" "),n("ul",[n("li",[n("RouterLink",{attrs:{to:"/spec/abci/"}},[t._v("ABCI")]),t._v(": Details about interactions between the\napplication and consensus engine over ABCI")],1),t._v(" "),n("li",[n("RouterLink",{attrs:{to:"/spec/consensus/wal.html"}},[t._v("Write-Ahead Log")]),t._v(": Details about how the consensus\nengine preserves data and recovers from crash failures")],1)]),t._v(" "),n("h2",{attrs:{id:"overview"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#overview"}},[t._v("#")]),t._v(" Overview")]),t._v(" "),n("p",[t._v('Tendermint provides Byzantine Fault Tolerant State Machine Replication using\nhash-linked batches of transactions. Such transaction batches are called "blocks".\nHence, Tendermint defines a "blockchain".')]),t._v(" "),n("p",[t._v("Each block in Tendermint has a unique index - its Height.\nHeight's in the blockchain are monotonic.\nEach block is committed by a known set of weighted Validators.\nMembership and weighting within this validator set may change over time.\nTendermint guarantees the safety and liveness of the blockchain\nso long as less than 1/3 of the total weight of the Validator set\nis malicious or faulty.")]),t._v(" "),n("p",[t._v("A commit in Tendermint is a set of signed messages from more than 2/3 of\nthe total weight of the current Validator set. Validators take turns proposing\nblocks and voting on them. Once enough votes are received, the block is considered\ncommitted. These votes are included in the "),n("em",[t._v("next")]),t._v(" block as proof that the previous block\nwas committed - they cannot be included in the current block, as that block has already been\ncreated.")]),t._v(" "),n("p",[t._v("Once a block is committed, it can be executed against an application.\nThe application returns results for each of the transactions in the block.\nThe application can also return changes to be made to the validator set,\nas well as a cryptographic digest of its latest state.")]),t._v(" "),n("p",[t._v('Tendermint is designed to enable efficient verification and authentication\nof the latest state of the blockchain. To achieve this, it embeds\ncryptographic commitments to certain information in the block "header".\nThis information includes the contents of the block (eg. the transactions),\nthe validator set committing the block, as well as the various results returned by the application.\nNote, however, that block execution only occurs '),n("em",[t._v("after")]),t._v(" a block is committed.\nThus, application results can only be included in the "),n("em",[t._v("next")]),t._v(" block.")]),t._v(" "),n("p",[t._v("Also note that information like the transaction results and the validator set are never\ndirectly included in the block - only their cryptographic digests (Merkle roots) are.\nHence, verification of a block requires a separate data structure to store this information.\nWe call this the "),n("code",[t._v("State")]),t._v(". Block verification also requires access to the previous block.")])])}),[],!1,null,null,null);e.default=o.exports}}]);